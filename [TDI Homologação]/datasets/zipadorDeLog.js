function createDataset(fields, constraints, sortFields) {var INSTANCIA = "default";var qtLinhas = 5;var retorno = DatasetBuilder.newDataset();retorno.addColumn("Linha");try{var txt = "";txt = new java.io.File("").getAbsolutePath();txt = txt.substring(0, txt.lastIndexOf(java.io.File.separator));retorno.addRow(new Array(txt));txt = txt + java.io.File.separator + "server" + java.io.File.separator + INSTANCIA + java.io.File.separator + "log" + java.io.File.separator + "server.log.2011-05-30";var fout = new java.io.FileOutputStream(txt + "brava.zip");var zout= new java.util.zip.ZipOutputStream(fout);zout.putNextEntry(new java.util.zip.ZipEntry("server.log.2011-05-30"));var inf = new java.io.FileInputStream(txt);var len=0;var buf = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 2048);while((len = inf.read(buf)) >0){zout.write(buf,0,len);}zout.closeEntry();zout.close();inf.close();fout.flush();fout.close();retorno.addRow(new Array("ok"));}catch (e) {txt= "Erro: " + e.message;retorno.addRow(new Array(txt));}return retorno;}