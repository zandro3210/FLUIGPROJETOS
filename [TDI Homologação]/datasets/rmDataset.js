function createDataset(fields, constraints, sortFields) {		// Cria o dataset	var newDataset = DatasetBuilder.newDataset();	newDataset.addColumn("Email");	newDataset.addColumn("Unidade");  newDataset.addColumn("Equipe");  newDataset.addColumn("CPF");	newDataset.addColumn("Cargo");		newDataset.addColumn("CC");		newDataset.addColumn("Classe");		newDataset.addColumn("Item");			newDataset.addColumn("CPFGestor");		newDataset.addColumn("EmailGestor");	// Conecta o servico e busca os livros	var periodicService = ServiceManager.getService('RMPessoa');	var serviceHelper = periodicService.getBean();	var serviceLocator =	serviceHelper.instantiate('org.tempuri.ServiceLocator');	var service = serviceLocator.getServiceSoap();		// Invoca o servico	try {		var retorno = service.obterDadosChefia("",constraints[0].initialValue);        var DocumentElement = new XML(retorno);		newDataset.addRow(new Array(DocumentElement.Chefe.EMAIL_PARTICIPANTE.toString(), DocumentElement.Chefe.FILIAL_PARTICIPANTE.toString(),DocumentElement.Chefe.SECAO_PARTICIPANTE.toString(),DocumentElement.Chefe.CPF_PARTICIPANTE.toString(),				  DocumentElement.Chefe.CARGO_PARTICIPANTE.toString(),                     DocumentElement.Chefe.CODCCUSTO.toString(),		            DocumentElement.Chefe.CLASSE_VALOR.toString(),		            DocumentElement.Chefe.ITEM_CONTABIL.toString(),		            DocumentElement.Chefe.CPF_GEST.toString(),		            DocumentElement.Chefe.EMAIL_GEST.toString()));	} catch(erro) {		newDataset.addRow(new Array(erro.message));	}		return newDataset;}