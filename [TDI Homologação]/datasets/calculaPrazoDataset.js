function createDataset(fields, constraints, sortFields) {	//var processId = '131';	var processId = fields[0];		log.info("#####buscaAtividadesExecutadas");	var processIdConstraint = DatasetFactory.createConstraint("processHistoryPK.processInstanceId", processId, processId, ConstraintType.MUST);    var processState = DatasetFactory.createConstraint("stateSequence", "8", "8", ConstraintType.MUST);    	var movementConstraints = new Array(processIdConstraint,processState);	var movementFields = new Array("processHistoryPK.movementSequence");	    try    {       var movementDataset  = DatasetFactory.getDataset("processHistory", movementFields, movementConstraints, new Array());    }    catch (e)    {        log.info("Problema ao consultar dataset processHistory: " + e);        throw "Problema ao consultar dataset processHistory: " + e;    }		var returnDataset = DatasetBuilder.newDataset();	returnDataset.addColumn("prazosAtividade");		if(movementDataset.rowsCount > 0){		var movement = movementDataset.getValue(0,"processHistoryPK.movementSequence");		log.info(":::::Movimento : " + movement);				processIdConstraint = DatasetFactory.createConstraint("processTaskPK.processInstanceId", processId, processId, ConstraintType.MUST);		var movementConstraint = DatasetFactory.createConstraint("processTaskPK.movementSequence", movement, movement, ConstraintType.MUST);			var deadLineDateConstraints = new Array(processIdConstraint,movementConstraint);		var deadLineDateFields = new Array("deadlineDate");				try		{		   var deadLineDateDataset  = DatasetFactory.getDataset("processTask", deadLineDateFields, deadLineDateConstraints, new Array());		}		catch (e)		{			log.info("Problema ao consultar dataset processTask: " + e);			throw "Problema ao consultar dataset processTask: " + e;		}				returnDataset.addRow(new Array(deadLineDateDataset.getValue(0,"deadlineDate")));		return returnDataset;			}else{		returnDataset.addRow(new Array(""));		return returnDataset;	}						}